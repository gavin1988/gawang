{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "NAT Monitor: Tempalte to launch two NAT nodes in an existing VPC in a hot/hot NAT configuration. This template assumes you already have a VPC configured with public subnets in 2 AZs, cooresponding subnets, and route tables configured for your private subnets.",
  "Parameters":{
      "Environment":{
         "Type":"String",
         "Description":"Environment where the resources will be deployed",
         "AllowedValues":[
            "nonprod-west",
            "nonprod-east",
            "prod-west",
            "prod-east"
         ]
      }
   },
  "Mappings": {
    "RegionMap": {
      "us-east-1": {
        "AMI": "ami-b66ed3de",
        "VPCID":"vpc-0870fe6d",
        "VpcCidr":"10.95.128.0/17"
      },
      "us-west-2": {
        "AMI": "ami-030f4133",
        "VPCID":"vpc-6c26f009",
        "VpcCidr":"10.95.0.0/17"
      }
    },
    "Environment":{
            "nonprod-west":{
                "SNIDA": "subnet-eed9748b",
                "SNIDB": "subnet-5b985b2c",
                "SNIDC": "subnet-8104e4d8"
            },
            "prod-west":{
                "SNIDA": "subnet-79985b0e",
                "SNIDB": "subnet-e404e4bd",
                "SNIDC": "subnet-e404e4bd"
            },
            "nonprod-east":{
                "SNIDA": "subnet-7806cf21",
                "SNIDB": "subnet-beb15995",
                "SNIDC": "subnet-4bab053c"
            },
            "prod-east":{
                "SNIDA": "subnet-3f05cc66",
                "SNIDB": "subnet-95b159be",
                "SNIDC": "subnet-2dab055a"
            }
        }
  },
  "Resources": {
    "NATRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "NAT_Takeover",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "ec2:DescribeInstances",
                    "ec2:DescribeRouteTables",
                    "ec2:CreateRoute",
                    "ec2:ReplaceRoute",
                    "ec2:StartInstances",
                    "ec2:StopInstances"
                  ],
                  "Resource": "*"
                }
              ]
            }
          },
          {
            "PolicyName": "S3_ROAccess",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "Stmt1381265878048",
                  "Action": [
                    "s3:GetObject",
                    "s3:ListAllMyBuckets",
                    "s3:ListBucket"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "NATRoleProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "NATRole"
          }
        ]
      }
    },
    "NAT1Instance": {
      "Type": "AWS::EC2::Instance",
      "Metadata": {
        "Comment1": "Create NAT #1"
      },
      "Properties": {
        "InstanceType": "m3.xlarge",
        "KeyName": "hbogotve",
        "IamInstanceProfile": {
          "Ref": "NATRoleProfile"
        },
        "SubnetId": { "Fn::FindInMap":[ "Environment", { "Ref":"Environment" }, "SNIDA" ]},
        "SourceDestCheck": "false",
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "SecurityGroupIds": [
          {
            "Ref": "SG"
          }
        ],
        "Tags": [
                    {
                        "Key":"Name",
                        "Value": { "Fn::Join" : [ " ", [ { "Ref":"Environment" }, " NAT Server A" ] ] }
                    },
                    {
                        "Key":"environment",
                        "Value": { "Ref":"Environment" }
                    },
                    {
                        "Key":"application",
                        "Value":"nat"
                    }
                ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -v\n",
                "yum update -y aws*\n",
                ". /etc/profile.d/aws-apitools-common.sh\n"
              ]
            ]
          }
        }
      }
    },
    "NAT2Instance": {
      "Type": "AWS::EC2::Instance",
      "Metadata": {
        "Comment1": "Create NAT #2"
      },
      "Properties": {
        "InstanceType": "m3.xlarge",
        "KeyName": "hbogotve",
        "IamInstanceProfile": {
          "Ref": "NATRoleProfile"
        },
        "SubnetId": { "Fn::FindInMap":[ "Environment", { "Ref":"Environment" }, "SNIDB" ]},
        "SourceDestCheck": "false",
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "SecurityGroupIds": [
          {
            "Ref": "SG"
          }
        ],
        "Tags": [
                    {
                        "Key":"Name",
                        "Value": { "Fn::Join" : [ " ", [ { "Ref":"Environment" }, " NAT Server B" ] ] }
                    },
                    {
                        "Key":"environment",
                        "Value": { "Ref":"Environment" }
                    },
                    {
                        "Key":"application",
                        "Value":"nat"
                    }
                ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -v\n",
                "yum update -y aws*\n",
                ". /etc/profile.d/aws-apitools-common.sh\n"
              ]
            ]
          }
        }
      }
    },
    "NAT3Instance": {
      "Type": "AWS::EC2::Instance",
      "Metadata": {
        "Comment1": "Create NAT #3"
      },
      "Properties": {
        "InstanceType": "m3.xlarge",
        "KeyName": "hbogotve",
        "IamInstanceProfile": {
          "Ref": "NATRoleProfile"
        },
        "SubnetId": { "Fn::FindInMap":[ "Environment", { "Ref":"Environment" }, "SNIDC" ]},
        "SourceDestCheck": "false",
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "SecurityGroupIds": [
          {
            "Ref": "SG"
          }
        ],
        "Tags": [
                    {
                        "Key":"Name",
                        "Value": { "Fn::Join" : [ " ", [ { "Ref":"Environment" }, " NAT Server C" ] ] }
                    },
                    {
                        "Key":"environment",
                        "Value": { "Ref":"Environment" }
                    },
                    {
                        "Key":"application",
                        "Value":"nat"
                    }
                ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -v\n",
                "yum update -y aws*\n",
                ". /etc/profile.d/aws-apitools-common.sh\n"
              ]
            ]
          }
        }
      }
    },
    "SG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Rules for allowing access to HA Nodes",
        "VpcId": { "Fn::FindInMap":[ "RegionMap", { "Ref":"AWS::Region" }, "VPCID" ]},
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "4.31.98.42/32"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "206.208.180.240/32"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "206.208.180.162/32"
          },
          {
            "IpProtocol": "-1",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": { "Fn::FindInMap":[ "RegionMap", { "Ref":"AWS::Region" }, "VpcCidr" ]}
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "NATAllowICMP": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "SG"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "SourceSecurityGroupId": {
          "Ref": "SG"
        }
      }
    }
  }
}
